<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Target" xml:space="preserve">
    <value>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</value>
  </data>
  <data name="DefaultSchema" xml:space="preserve">
    <value>doctor</value>
  </data>
</root>